"use strict";var precacheConfig=[["/index.html","ed6ee26df7f572d070c77dc53891bc3b"],["/static/css/main.a2154af8.css","84b6b9ab6d18c0d66cb042813b013db4"],["/static/js/main.86d7f401.js","61770e327c25146bd00187d9bdd8f609"],["/static/media/1.858d5f75.jpeg","858d5f75c88511c6e06fd22e478dfc8e"],["/static/media/2.42dc7b61.jpeg","42dc7b61d1d069e32c69de6720853780"],["/static/media/3.67f0a809.jpeg","67f0a809316455cd26b84dda96c8fe28"],["/static/media/4.97aa07dd.jpeg","97aa07ddf65e38241266e2c58ac523e6"],["/static/media/about_background.d4a6117d.jpg","d4a6117d3d9fd28c9ff52998365acf34"],["/static/media/beyond_the_mountains.41f5e8ff.ttf","41f5e8ff1d98d490a19c6d48ea7b74b1"],["/static/media/beyond_the_mountains.9b1ca82b.otf","9b1ca82b8968ec5a92ac49cb58e86d2c"],["/static/media/elements_background.299ae063.jpg","299ae063ca180c26b24084d42e116cf1"],["/static/media/intro.49c9ebdb.png","49c9ebdb3c98a2e2af3b7df7d5afd719"],["/static/media/kutch-rann-utsav.6d840ee2.jpg","6d840ee2a531b577faec80c85727f73f"],["/static/media/man.013b60d9.png","013b60d9b4b1d038ac0bdf73cf08e5dd"],["/static/media/message.a267c3f7.svg","a267c3f72b02bac92fb3fa0150b40813"],["/static/media/phone-call.5be51938.svg","5be51938f1826ccb0a168470d3ed0ce2"],["/static/media/placeholder.82e68c71.svg","82e68c7159a3f89a0b2b418e7177fbb3"],["/static/media/planet-earth.5c432252.svg","5c43225279c73695ce5591d62e40127d"],["/static/media/rann-utsav.ec7fb9ae.jpg","ec7fb9aed35f236a752263ffbbae67a2"],["/static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["/static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["/static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["/static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"],["/static/media/terracotta.8ffab839.jpg","8ffab839cbcc5ebb4e5049ea8af02e7e"],["/static/media/test_1.475b564f.jpg","475b564fb040b58f8b661384b78b66a5"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});